{
  // Basics
  // -----------------------------------------------------------------------------------------------
  "search.exclude": {},
  // "files.exclude": {
  //   "**/.git": true,
  //   "**/.svn": true,
  //   "**/.hg": true,
  //   "**/.DS_Store": true,
  //   "**/Thumbs.db": true
  // },
  "files.associations": {},
  "editor.wordBasedSuggestions": "matchingDocuments",

  // Allow @scope
  "css.lint.unknownAtRules": "ignore",

  // Extensions
  // -----------------------------------------------------------------------------------------------

  // EXTENSION: EditorConfig.EditorConfig
  "files.trimTrailingWhitespace": false,

  // EXTENSION: gencer.html-slim-scss-css-class-completion
  "html-css-class-completion.includeGlobPattern": "**/*.{css,tsx}",

  // EXTENSION: Sort Lines
  "sortLines.filterBlankLines": true,

  // EXTENSION: ionutvmi.path-autocomplete
  "path-autocomplete.triggerOutsideStrings": true,

  // EXTENSION: task.vscode-task
  "yaml.schemaStore.enable": true,
  "yaml.schemas": {
    "https://taskfile.dev/schema.json": [
      "**/Taskfile.yml",
      "**/*.taskfile.yml",
      "taskfiles/**/*.yml"
    ],
    "http://json-schema.org/draft-07/schema#": ["**/schema.*.yml"]
  },

  "task": { "outputTo": "terminal" },

  // Formatting & Language specific
  // -----------------------------------------------------------------------------------------------
  "eslint.useFlatConfig": true,
  "typescript.tsdk": "node_modules/typescript/lib",
  "typescript.suggest.autoImports": true,
  "typescript.preferences.preferTypeOnlyAutoImports": true,
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "typescript.suggest.includeCompletionsForImportStatements": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[typescriptreact]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll": "always",
      // Mit eslint-plugin-unused-imports
      "source.organizeImports": "never",
      "source.addMissingImports": "always"
    }
  },
  "[typescript]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll": "always",
      "source.organizeImports": "never",
      "source.addMissingImports": "always"
    }
  },
  "[javascript]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll": "always",
      "source.organizeImports": "never",
      "source.addMissingImports": "always"
    }
  },
  "[html]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[css]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 100
  },
  "[markdown]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 100
  },
  "[xml]": {
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 100
  },
  "[json]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  }
}
